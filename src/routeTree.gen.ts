/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteRouteImport } from './routes/about/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as DocsSplatRouteImport } from './routes/docs/$'
import { Route as BlogPostIdIndexRouteImport } from './routes/blog/$postId/index'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth/login/index'

const AboutRouteRoute = AboutRouteRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRouteRoute,
} as any)
const DocsSplatRoute = DocsSplatRouteImport.update({
  id: '/docs/$',
  path: '/docs/$',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostIdIndexRoute = BlogPostIdIndexRouteImport.update({
  id: '/blog/$postId/',
  path: '/blog/$postId/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRouteRouteWithChildren
  '/docs/$': typeof DocsSplatRoute
  '/about/': typeof AboutIndexRoute
  '/blog': typeof BlogIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/blog/$postId': typeof BlogPostIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs/$': typeof DocsSplatRoute
  '/about': typeof AboutIndexRoute
  '/blog': typeof BlogIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/blog/$postId': typeof BlogPostIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRouteRouteWithChildren
  '/docs/$': typeof DocsSplatRoute
  '/about/': typeof AboutIndexRoute
  '/blog/': typeof BlogIndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/blog/$postId/': typeof BlogPostIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/docs/$'
    | '/about/'
    | '/blog'
    | '/login'
    | '/blog/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/docs/$' | '/about' | '/blog' | '/login' | '/blog/$postId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/docs/$'
    | '/about/'
    | '/blog/'
    | '/_auth/login/'
    | '/blog/$postId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AboutRouteRoute: typeof AboutRouteRouteWithChildren
  DocsSplatRoute: typeof DocsSplatRoute
  BlogIndexRoute: typeof BlogIndexRoute
  BlogPostIdIndexRoute: typeof BlogPostIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof AboutRouteRoute
    }
    '/docs/$': {
      id: '/docs/$'
      path: '/docs/$'
      fullPath: '/docs/$'
      preLoaderRoute: typeof DocsSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$postId/': {
      id: '/blog/$postId/'
      path: '/blog/$postId'
      fullPath: '/blog/$postId'
      preLoaderRoute: typeof BlogPostIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AboutRouteRouteChildren {
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteRouteChildren: AboutRouteRouteChildren = {
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteRouteWithChildren = AboutRouteRoute._addFileChildren(
  AboutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AboutRouteRoute: AboutRouteRouteWithChildren,
  DocsSplatRoute: DocsSplatRoute,
  BlogIndexRoute: BlogIndexRoute,
  BlogPostIdIndexRoute: BlogPostIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
